/*
  Dilarang keras menggandakan/mengcopy/menyebarkan/membajak/mendecompile 
  Software ini dalam bentuk apapun tanpa seijin pembuat software
  (Khanza.Soft Media). Bagi yang sengaja membajak softaware ini ta
  npa ijin, kami sumpahi sial 1000 turunan, miskin sampai 500 turu
  nan. Selalu mendapat kecelakaan sampai 400 turunan. Anak pertama
  nya cacat tidak punya kaki sampai 300 turunan. Susah cari jodoh
  sampai umur 50 tahun sampai 200 turunan. Ya Alloh maafkan kami 
  karena telah berdoa buruk, semua ini kami lakukan karena kami ti
  dak pernah rela karya kami dibajak tanpa ijin.
 */


package setting;
import fungsi.WarnaTable;
import fungsi.batasInput;
import fungsi.koneksiDB;
import fungsi.sekuel;
import fungsi.validasi;
import java.awt.Dimension;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

/**
 *
 * @author perpustakaan
 */
public class DlgUpdateUser extends javax.swing.JDialog {
    private final DefaultTableModel tabMode;
    private Connection koneksi=koneksiDB.condb();
    private sekuel Sequel=new sekuel();
    private validasi Valid=new validasi();
    private PreparedStatement ps;
    private ResultSet rs;
    private int i=0,jml=0;
    private boolean[] akses;
    private String[] menu;
    private boolean[] pilih;

    /** Creates new form DlgUser
     * @param parent
     * @param modal */
    public DlgUpdateUser(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();

        tabMode=new DefaultTableModel(null,new Object[]{"P","Pilihan Hak Akses Menu di SIMKES","Status"}){
              @Override 
              public boolean isCellEditable(int rowIndex, int colIndex){
                  boolean a = true;
                    if (colIndex==1) {
                        a=false;
                    }
                    return a;
              }              
              Class[] types = new Class[] {
                java.lang.Boolean.class,java.lang.Object.class,java.lang.Boolean.class
             };
             @Override
             public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
             }
        };

        tbUser.setModel(tabMode);
        //tbJabatan.setDefaultRenderer(Object.class, new WarnaTable(Scroll.getBackground(),Color.GREEN));
        tbUser.setPreferredScrollableViewportSize(new Dimension(500,500));
        tbUser.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);

        for (i = 0; i < 3;i++) {
            TableColumn column = tbUser.getColumnModel().getColumn(i);
            if(i==0){
                column.setPreferredWidth(25);
            }else if(i==1){
                column.setPreferredWidth(350);
            }else if(i==2){
                column.setPreferredWidth(40);
            }
        }
        tbUser.setDefaultRenderer(Object.class, new WarnaTable());
        TPass.setDocument(new batasInput((byte)50).getKata(TPass));
        TCari.setDocument(new batasInput((byte)100).getKata(TCari));       
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do falseT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        TKd = new widget.TextBox();
        Popup = new javax.swing.JPopupMenu();
        ppBersihkan = new javax.swing.JMenuItem();
        ppSemua = new javax.swing.JMenuItem();
        ppBersihkan1 = new javax.swing.JMenuItem();
        ppSemua1 = new javax.swing.JMenuItem();
        internalFrame1 = new widget.InternalFrame();
        Scroll = new widget.ScrollPane();
        tbUser = new widget.Table();
        panelGlass5 = new widget.panelisi();
        jLabel3 = new widget.Label();
        jLabel4 = new widget.Label();
        TPass = new widget.TextBox();
        TNmUser = new widget.TextBox();
        panelGlass8 = new widget.panelisi();
        jLabel8 = new widget.Label();
        TCari = new widget.TextBox();
        BtnCari = new widget.Button();
        BtnAll = new widget.Button();
        jLabel9 = new widget.Label();
        LCount = new widget.Label();
        BtnSimpan = new widget.Button();
        BtnKeluar = new widget.Button();

        TKd.setEditable(false);
        TKd.setHighlighter(null);
        TKd.setName("TKd"); // NOI18N
        TKd.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TKdKeyPressed(evt);
            }
        });

        Popup.setName("Popup"); // NOI18N

        ppBersihkan.setBackground(new java.awt.Color(255, 255, 254));
        ppBersihkan.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        ppBersihkan.setForeground(new java.awt.Color(50, 50, 50));
        ppBersihkan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/category.png"))); // NOI18N
        ppBersihkan.setText("Bersihkan Pilihan");
        ppBersihkan.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        ppBersihkan.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        ppBersihkan.setIconTextGap(8);
        ppBersihkan.setName("ppBersihkan"); // NOI18N
        ppBersihkan.setPreferredSize(new java.awt.Dimension(200, 25));
        ppBersihkan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ppBersihkanActionPerformed(evt);
            }
        });
        Popup.add(ppBersihkan);

        ppSemua.setBackground(new java.awt.Color(255, 255, 254));
        ppSemua.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        ppSemua.setForeground(new java.awt.Color(50, 50, 50));
        ppSemua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/category.png"))); // NOI18N
        ppSemua.setText("Pilih Semua");
        ppSemua.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        ppSemua.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        ppSemua.setIconTextGap(8);
        ppSemua.setName("ppSemua"); // NOI18N
        ppSemua.setPreferredSize(new java.awt.Dimension(200, 25));
        ppSemua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ppSemuaActionPerformed(evt);
            }
        });
        Popup.add(ppSemua);

        ppBersihkan1.setBackground(new java.awt.Color(255, 255, 254));
        ppBersihkan1.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        ppBersihkan1.setForeground(new java.awt.Color(50, 50, 50));
        ppBersihkan1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/category.png"))); // NOI18N
        ppBersihkan1.setText("Bersihkan Semua Hak Akses");
        ppBersihkan1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        ppBersihkan1.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        ppBersihkan1.setIconTextGap(8);
        ppBersihkan1.setName("ppBersihkan1"); // NOI18N
        ppBersihkan1.setPreferredSize(new java.awt.Dimension(200, 25));
        ppBersihkan1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ppBersihkan1ActionPerformed(evt);
            }
        });
        Popup.add(ppBersihkan1);

        ppSemua1.setBackground(new java.awt.Color(255, 255, 254));
        ppSemua1.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        ppSemua1.setForeground(new java.awt.Color(50, 50, 50));
        ppSemua1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/category.png"))); // NOI18N
        ppSemua1.setText("Pilih Semua Hak Akses");
        ppSemua1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        ppSemua1.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        ppSemua1.setIconTextGap(8);
        ppSemua1.setName("ppSemua1"); // NOI18N
        ppSemua1.setPreferredSize(new java.awt.Dimension(200, 25));
        ppSemua1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ppSemua1ActionPerformed(evt);
            }
        });
        Popup.add(ppSemua1);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);

        internalFrame1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(240, 245, 235)), "::[ Update Hak Akses User ]::", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(50, 50, 50))); // NOI18N
        internalFrame1.setName("internalFrame1"); // NOI18N
        internalFrame1.setLayout(new java.awt.BorderLayout(1, 1));

        Scroll.setComponentPopupMenu(Popup);
        Scroll.setName("Scroll"); // NOI18N
        Scroll.setOpaque(true);

        tbUser.setToolTipText("Untuk memegang hak akses agar tidak hilang karena pencarian data, silahkan klik di bagian P. \nUntuk memberikan hak akses klik pada akses. Gunakan klik kanan untuk menampilkan popup menu.");
        tbUser.setComponentPopupMenu(Popup);
        tbUser.setName("tbUser"); // NOI18N
        Scroll.setViewportView(tbUser);

        internalFrame1.add(Scroll, java.awt.BorderLayout.CENTER);

        panelGlass5.setName("panelGlass5"); // NOI18N
        panelGlass5.setPreferredSize(new java.awt.Dimension(55, 44));
        panelGlass5.setLayout(null);

        jLabel3.setText("User :");
        jLabel3.setName("jLabel3"); // NOI18N
        panelGlass5.add(jLabel3);
        jLabel3.setBounds(4, 10, 40, 23);

        jLabel4.setText("Password :");
        jLabel4.setName("jLabel4"); // NOI18N
        panelGlass5.add(jLabel4);
        jLabel4.setBounds(209, 10, 60, 23);

        TPass.setName("TPass"); // NOI18N
        TPass.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TPassKeyPressed(evt);
            }
        });
        panelGlass5.add(TPass);
        TPass.setBounds(271, 10, 150, 23);

        TNmUser.setEditable(false);
        TNmUser.setName("TNmUser"); // NOI18N
        TNmUser.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TNmUserKeyPressed(evt);
            }
        });
        panelGlass5.add(TNmUser);
        TNmUser.setBounds(47, 10, 150, 23);

        internalFrame1.add(panelGlass5, java.awt.BorderLayout.PAGE_START);

        panelGlass8.setName("panelGlass8"); // NOI18N
        panelGlass8.setPreferredSize(new java.awt.Dimension(55, 44));
        panelGlass8.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 9));

        jLabel8.setText("Key Word :");
        jLabel8.setName("jLabel8"); // NOI18N
        jLabel8.setPreferredSize(new java.awt.Dimension(60, 23));
        jLabel8.setRequestFocusEnabled(false);
        panelGlass8.add(jLabel8);

        TCari.setName("TCari"); // NOI18N
        TCari.setPreferredSize(new java.awt.Dimension(135, 23));
        TCari.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TCariKeyPressed(evt);
            }
        });
        panelGlass8.add(TCari);

        BtnCari.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/accept.png"))); // NOI18N
        BtnCari.setMnemonic('1');
        BtnCari.setToolTipText("Alt+1");
        BtnCari.setName("BtnCari"); // NOI18N
        BtnCari.setPreferredSize(new java.awt.Dimension(28, 23));
        BtnCari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnCariActionPerformed(evt);
            }
        });
        BtnCari.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnCariKeyPressed(evt);
            }
        });
        panelGlass8.add(BtnCari);

        BtnAll.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/Search-16x16.png"))); // NOI18N
        BtnAll.setMnemonic('2');
        BtnAll.setToolTipText("Alt+2");
        BtnAll.setName("BtnAll"); // NOI18N
        BtnAll.setPreferredSize(new java.awt.Dimension(28, 23));
        BtnAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnAllActionPerformed(evt);
            }
        });
        BtnAll.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnAllKeyPressed(evt);
            }
        });
        panelGlass8.add(BtnAll);

        jLabel9.setText("Record :");
        jLabel9.setName("jLabel9"); // NOI18N
        jLabel9.setPreferredSize(new java.awt.Dimension(50, 23));
        panelGlass8.add(jLabel9);

        LCount.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        LCount.setText("0");
        LCount.setName("LCount"); // NOI18N
        LCount.setPreferredSize(new java.awt.Dimension(30, 23));
        panelGlass8.add(LCount);

        BtnSimpan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/save-16x16.png"))); // NOI18N
        BtnSimpan.setMnemonic('S');
        BtnSimpan.setToolTipText("Alt+S");
        BtnSimpan.setName("BtnSimpan"); // NOI18N
        BtnSimpan.setPreferredSize(new java.awt.Dimension(28, 23));
        BtnSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnSimpanActionPerformed(evt);
            }
        });
        BtnSimpan.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnSimpanKeyPressed(evt);
            }
        });
        panelGlass8.add(BtnSimpan);

        BtnKeluar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/exit.png"))); // NOI18N
        BtnKeluar.setMnemonic('K');
        BtnKeluar.setToolTipText("Alt+K");
        BtnKeluar.setName("BtnKeluar"); // NOI18N
        BtnKeluar.setPreferredSize(new java.awt.Dimension(28, 23));
        BtnKeluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnKeluarActionPerformed(evt);
            }
        });
        BtnKeluar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnKeluarKeyPressed(evt);
            }
        });
        panelGlass8.add(BtnKeluar);

        internalFrame1.add(panelGlass8, java.awt.BorderLayout.PAGE_END);

        getContentPane().add(internalFrame1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TKdKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TKdKeyPressed
        Valid.pindah(evt,BtnSimpan,TPass);
}//GEN-LAST:event_TKdKeyPressed

    private void TPassKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TPassKeyPressed
        Valid.pindah(evt,TKd,BtnSimpan);
}//GEN-LAST:event_TPassKeyPressed

    private void TNmUserKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TNmUserKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_TNmUserKeyPressed

    private void TCariKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TCariKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            BtnCariActionPerformed(null);
        }else if(evt.getKeyCode()==KeyEvent.VK_PAGE_DOWN){
            BtnCari.requestFocus();
        }else if(evt.getKeyCode()==KeyEvent.VK_PAGE_UP){
            BtnKeluar.requestFocus();
        }else if(evt.getKeyCode()==KeyEvent.VK_UP){
            tbUser.requestFocus();
        }
    }//GEN-LAST:event_TCariKeyPressed

    private void BtnCariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnCariActionPerformed
        tampil(TKd.getText());
    }//GEN-LAST:event_BtnCariActionPerformed

    private void BtnCariKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnCariKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_SPACE){
            BtnCariActionPerformed(null);
        }else{
            Valid.pindah(evt, TCari,BtnAll);
        }
    }//GEN-LAST:event_BtnCariKeyPressed

    private void BtnAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnAllActionPerformed
        TCari.setText("");
        tampil(TKd.getText());
    }//GEN-LAST:event_BtnAllActionPerformed

    private void BtnAllKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnAllKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_SPACE){
            BtnAllActionPerformed(null);
        }else{
            Valid.pindah(evt, BtnCari,BtnSimpan);
        }
    }//GEN-LAST:event_BtnAllKeyPressed

    private void BtnSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnSimpanActionPerformed
        if(TKd.getText().trim().equals("")||TNmUser.getText().trim().equals("")){
            Valid.textKosong(TNmUser,"User");            
        }else if(TPass.getText().trim().equals("")){
            Valid.textKosong(TPass,"Password");            
        }else{ 
            Simpan();
//            Simpan2();
        }
    }//GEN-LAST:event_BtnSimpanActionPerformed

    private void BtnSimpanKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnSimpanKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_SPACE){
            BtnSimpanActionPerformed(null);
        }else{
            Valid.pindah(evt, BtnAll,BtnKeluar);
        }
    }//GEN-LAST:event_BtnSimpanKeyPressed

    private void BtnKeluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnKeluarActionPerformed
        dispose();
    }//GEN-LAST:event_BtnKeluarActionPerformed

    private void BtnKeluarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnKeluarKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_SPACE){
            BtnCariActionPerformed(null);
        }else{
            Valid.pindah(evt, BtnSimpan,TCari);
        }
    }//GEN-LAST:event_BtnKeluarKeyPressed

    private void ppBersihkanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ppBersihkanActionPerformed
        for(i=0;i<tbUser.getRowCount();i++){
            tbUser.setValueAt(false,i,0);
        }
    }//GEN-LAST:event_ppBersihkanActionPerformed

    private void ppSemuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ppSemuaActionPerformed
        for(i=0;i<tbUser.getRowCount();i++){
            tbUser.setValueAt(true,i,0);
        }
    }//GEN-LAST:event_ppSemuaActionPerformed

    private void ppSemua1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ppSemua1ActionPerformed
        for(i=0;i<tbUser.getRowCount();i++){
            tbUser.setValueAt(true,i,2);
        }
    }//GEN-LAST:event_ppSemua1ActionPerformed

    private void ppBersihkan1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ppBersihkan1ActionPerformed
        for(i=0;i<tbUser.getRowCount();i++){
            tbUser.setValueAt(false,i,2);
        }
    }//GEN-LAST:event_ppBersihkan1ActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(() -> {
            DlgUpdateUser dialog = new DlgUpdateUser(new javax.swing.JFrame(), true);
            dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                @Override
                public void windowClosing(java.awt.event.WindowEvent e) {
                    System.exit(0);
                }
            });
            dialog.setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private widget.Button BtnAll;
    private widget.Button BtnCari;
    private widget.Button BtnKeluar;
    private widget.Button BtnSimpan;
    private widget.Label LCount;
    private javax.swing.JPopupMenu Popup;
    private widget.ScrollPane Scroll;
    private widget.TextBox TCari;
    private widget.TextBox TKd;
    private widget.TextBox TNmUser;
    private widget.TextBox TPass;
    private widget.InternalFrame internalFrame1;
    private widget.Label jLabel3;
    private widget.Label jLabel4;
    private widget.Label jLabel8;
    private widget.Label jLabel9;
    private widget.panelisi panelGlass5;
    private widget.panelisi panelGlass8;
    private javax.swing.JMenuItem ppBersihkan;
    private javax.swing.JMenuItem ppBersihkan1;
    private javax.swing.JMenuItem ppSemua;
    private javax.swing.JMenuItem ppSemua1;
    private widget.Table tbUser;
    // End of variables declaration//GEN-END:variables

    private void tampil(String user) {        
        try{    
            jml=0;
            for(i=0;i<tbUser.getRowCount();i++){
                if(tbUser.getValueAt(i,0).toString().equals("true")){
                    jml++;
                }
            }
            
            pilih=null;
            pilih=new boolean[jml]; 
            akses=null;
            akses=new boolean[jml];
            menu=null;
            menu=new String[jml];
            
            jml=0;
            for(i=0;i<tbUser.getRowCount();i++){
                if(tbUser.getValueAt(i,0).toString().equals("true")){
                    pilih[jml]=true;
                    menu[jml]=tbUser.getValueAt(i,1).toString();
                    akses[jml]=Boolean.parseBoolean(tbUser.getValueAt(i,2).toString());
                    jml++;
                }
            }
            
            Valid.tabelKosong(tabMode);
            
            for(i=0;i<jml;i++){
                tabMode.addRow(new Object[] {
                    pilih[i],menu[i],akses[i]
                });
            }
            
            ps=koneksi.prepareStatement("select toko_suplier,toko_jenis,toko_set_harga,toko_barang,"+
                        "stok_opname_toko,toko_riwayat_barang,toko_surat_pemesanan,toko_pengajuan_barang,toko_penerimaan_barang,"+
                        "toko_pengadaan_barang,toko_hutang,toko_bayar_pemesanan,toko_member,toko_penjualan,"+
                        "toko_piutang,toko_retur_beli,toko_pendapatan_harian,"+
                        "toko_bayar_piutang,toko_piutang_harian,toko_penjualan_harian,"+
                        "toko_sirkulasi,toko_retur_jual,toko_retur_piutang,posting_jurnal"+
                        "toko_sirkulasi2,toko_keuntungan_barang from user where id_user=AES_ENCRYPT(?,'nur')");
            try {
                ps.setString(1,user);
                rs=ps.executeQuery();
                while(rs.next()){
                    if("Suplier Toko".toLowerCase().contains(TCari.getText().toLowerCase())){
                        tabMode.addRow(new Object[]{false,"Suplier Toko",rs.getBoolean("toko_suplier")});
                    }
                    
                    if("Jenis Barang Toko".toLowerCase().contains(TCari.getText().toLowerCase())){
                        tabMode.addRow(new Object[]{false,"Jenis Barang Toko",rs.getBoolean("toko_jenis")});
                    }
                    
                    if("Barang Toko".toLowerCase().contains(TCari.getText().toLowerCase())){
                        tabMode.addRow(new Object[]{false,"Barang Toko",rs.getBoolean("toko_barang")});
                    }
                    
                    if("Stok Opname Toko".toLowerCase().contains(TCari.getText().toLowerCase())){
                        tabMode.addRow(new Object[]{false,"Stok Opname Toko",rs.getBoolean("stok_opname_toko")});
                    }
                    
                    if("Riwayat Barang Toko".toLowerCase().contains(TCari.getText().toLowerCase())){
                        tabMode.addRow(new Object[]{false,"Riwayat Barang Toko",rs.getBoolean("toko_riwayat_barang")});
                    }
                    
                    if("Surat Pemesanan Toko".toLowerCase().contains(TCari.getText().toLowerCase())){
                        tabMode.addRow(new Object[]{false,"Surat Pemesanan Toko",rs.getBoolean("toko_surat_pemesanan")});
                    }
                    
                    if("Pengajuan Barang Toko".toLowerCase().contains(TCari.getText().toLowerCase())){
                        tabMode.addRow(new Object[]{false,"Pengajuan Barang Toko",rs.getBoolean("toko_pengajuan_barang")});
                    }
                    
                    if("Penerimaan Barang Toko".toLowerCase().contains(TCari.getText().toLowerCase())){
                        tabMode.addRow(new Object[]{false,"Penerimaan Barang Toko",rs.getBoolean("toko_penerimaan_barang")});
                    }
                    
                    if("Pengadaan Barang Toko".toLowerCase().contains(TCari.getText().toLowerCase())){
                        tabMode.addRow(new Object[]{false,"Pengadaan Barang Toko",rs.getBoolean("toko_pengadaan_barang")});
                    }
                    
                    if("Member Toko".toLowerCase().contains(TCari.getText().toLowerCase())){
                        tabMode.addRow(new Object[]{false,"Member Toko",rs.getBoolean("toko_member")});
                    }
                    
                    if("Penjualan Toko".toLowerCase().contains(TCari.getText().toLowerCase())){
                        tabMode.addRow(new Object[]{false,"Penjualan Toko",rs.getBoolean("toko_penjualan")});
                    }
                    
                    if("Piutang Toko".toLowerCase().contains(TCari.getText().toLowerCase())){
                        tabMode.addRow(new Object[]{false,"Piutang Toko",rs.getBoolean("toko_piutang")});
                    }
                    
                    if("Retur Ke Suplier Toko".toLowerCase().contains(TCari.getText().toLowerCase())){
                        tabMode.addRow(new Object[]{false,"Retur Ke Suplier Toko",rs.getBoolean("toko_retur_beli")});
                    }
                    
                    if("Pendapatan Harian Toko".toLowerCase().contains(TCari.getText().toLowerCase())){
                        tabMode.addRow(new Object[]{false,"Pendapatan Harian Toko",rs.getBoolean("toko_pendapatan_harian")});
                    }
                    
                    if("Bayar Piutang Toko".toLowerCase().contains(TCari.getText().toLowerCase())){
                        tabMode.addRow(new Object[]{false,"Bayar Piutang Toko",rs.getBoolean("toko_bayar_piutang")});
                    }
                    
                    if("Piutang Harian Toko".toLowerCase().contains(TCari.getText().toLowerCase())){
                        tabMode.addRow(new Object[]{false,"Piutang Harian Toko",rs.getBoolean("toko_piutang_harian")});
                    }
                    
                    if("Penjualan Harian Toko".toLowerCase().contains(TCari.getText().toLowerCase())){
                        tabMode.addRow(new Object[]{false,"Penjualan Harian Toko",rs.getBoolean("toko_penjualan_harian")});
                    }
                    
                    if("Hutang Toko".toLowerCase().contains(TCari.getText().toLowerCase())){
                        tabMode.addRow(new Object[]{false,"Hutang Toko",rs.getBoolean("toko_hutang")});
                    }
                    
                    if("Bayar Pesan Toko".toLowerCase().contains(TCari.getText().toLowerCase())){
                        tabMode.addRow(new Object[]{false,"Bayar Pesan Toko",rs.getBoolean("toko_bayar_pemesanan")});
                    }
                    
                    if("Sirkulasi Barang Toko".toLowerCase().contains(TCari.getText().toLowerCase())){
                        tabMode.addRow(new Object[]{false,"Sirkulasi Barang Toko",rs.getBoolean("toko_sirkulasi")});
                    }
                    
                    if("Retur Jual Toko".toLowerCase().contains(TCari.getText().toLowerCase())){
                        tabMode.addRow(new Object[]{false,"Retur Jual Toko",rs.getBoolean("toko_retur_jual")});
                    }
                    
                    if("Retur Jual Piutang".toLowerCase().contains(TCari.getText().toLowerCase())){
                        tabMode.addRow(new Object[]{false,"Retur Jual Piutang",rs.getBoolean("toko_retur_piutang")});
                    }
                    
                    if("Sirkulasi Barang Toko 2".toLowerCase().contains(TCari.getText().toLowerCase())){
                        tabMode.addRow(new Object[]{false,"Sirkulasi Barang Toko 2",rs.getBoolean("toko_sirkulasi2")});
                    }
                    
                    if("Keuntungan Barang Toko".toLowerCase().contains(TCari.getText().toLowerCase())){
                        tabMode.addRow(new Object[]{false,"Keuntungan Barang Toko",rs.getBoolean("toko_keuntungan_barang")});
                    }
                    
                    if("Set Harga Toko".toLowerCase().contains(TCari.getText().toLowerCase())){
                        tabMode.addRow(new Object[]{false,"Set Harga Toko",rs.getBoolean("toko_set_harga")});
                    }
                }       
                LCount.setText(""+tabMode.getRowCount());
            } catch (Exception e) {
                System.out.println(e);
            } finally{
                if(rs!=null){
                    rs.close();
                }
                if(ps!=null){
                    ps.close();
                }
            }
                        
        }catch(Exception e){
            System.out.println("Notifikasi : "+e);
        }
    }
    
    public void isUser(String User,String Nama, String Password){
        TKd.setText(User);
        TNmUser.setText(Nama);
        TPass.setText(Password);
        tampil(User);
        TCari.requestFocus();
    }

    private void Simpan() {
        for(i=0;i<tbUser.getRowCount();i++){ 
            
            if("Suplier Toko".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","toko_suplier='"+tbUser.getValueAt(i,2).toString()+"'");
            }
            
            if("Jenis Barang Toko".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","toko_jenis='"+tbUser.getValueAt(i,2).toString()+"'");
            }
            
            if("Barang Toko".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","toko_barang='"+tbUser.getValueAt(i,2).toString()+"'");
            }
            
            if("Stok Opname Toko".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","stok_opname_toko='"+tbUser.getValueAt(i,2).toString()+"'");
            }
            
            if("Riwayat Barang Toko".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","toko_riwayat_barang='"+tbUser.getValueAt(i,2).toString()+"'");
            }
            
            if("Surat Pemesanan Toko".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","toko_surat_pemesanan='"+tbUser.getValueAt(i,2).toString()+"'");
            }
            
            if("Pengajuan Barang Toko".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","toko_pengajuan_barang='"+tbUser.getValueAt(i,2).toString()+"'");
            }
            
            if("Penerimaan Barang Toko".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","toko_penerimaan_barang='"+tbUser.getValueAt(i,2).toString()+"'");
            }
            
            if("Pengadaan Barang Toko".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","toko_pengadaan_barang='"+tbUser.getValueAt(i,2).toString()+"'");
            }
            
            if("Member Toko".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","toko_member='"+tbUser.getValueAt(i,2).toString()+"'");
            }
            
            if("Penjualan Toko".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","toko_penjualan='"+tbUser.getValueAt(i,2).toString()+"'");
            }
            
            if("Piutang Toko".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","toko_piutang='"+tbUser.getValueAt(i,2).toString()+"'");
            }
            
            if("Retur Ke Suplier Toko".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","toko_retur_beli='"+tbUser.getValueAt(i,2).toString()+"'");
            }
            
            if("Pendapatan Harian Toko".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","toko_pendapatan_harian='"+tbUser.getValueAt(i,2).toString()+"'");
            }
            
            if("Bayar Piutang Toko".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","toko_bayar_piutang='"+tbUser.getValueAt(i,2).toString()+"'");
            }
            
            if("Piutang Harian Toko".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","toko_piutang_harian='"+tbUser.getValueAt(i,2).toString()+"'");
            }
            
            if("Penjualan Harian Toko".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","toko_penjualan_harian='"+tbUser.getValueAt(i,2).toString()+"'");
            }
            
            if("Hutang Toko".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","toko_hutang='"+tbUser.getValueAt(i,2).toString()+"'");
            }
            
            if("Bayar Pesan Toko".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","toko_bayar_pemesanan='"+tbUser.getValueAt(i,2).toString()+"'");
            }
            
            if("Sirkulasi Barang Toko".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","toko_sirkulasi='"+tbUser.getValueAt(i,2).toString()+"'");
            }
            
            if("Retur Jual Toko".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","toko_retur_jual='"+tbUser.getValueAt(i,2).toString()+"'");
            }
            
            if("Retur Jual Piutang".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","toko_retur_piutang='"+tbUser.getValueAt(i,2).toString()+"'");
            }
            
            if("Sirkulasi Barang Toko 2".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","toko_sirkulasi2='"+tbUser.getValueAt(i,2).toString()+"'");
            }
            
            if("Keuntungan Barang Toko".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","toko_keuntungan_barang='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("Set Harga Toko".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","toko_set_harga='"+tbUser.getValueAt(i,2).toString()+"'");
            }
            if("Posting Jurnal".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","posting_jurnal='"+tbUser.getValueAt(i,2).toString()+"'");
            }
        }
        JOptionPane.showMessageDialog(null,"Proses update hak akses selesai..!!");
    }

}
